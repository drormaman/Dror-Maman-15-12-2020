{"version":3,"sources":["components/NavBar.tsx","atoms/exchangeRate.ts","exampleData.ts","atoms/Items.ts","helpers.ts","components/styled/StyledCardComponents.ts","components/ItemCard.tsx","components/styled/StyledListComponents.ts","components/ItemsList.tsx","components/StoreCard.tsx","components/StoresList.tsx","components/styled/StyledFormComponents.ts","components/AddItemModal.tsx","components/MyOrdersList.tsx","pages/MyOrdersPage.tsx","pages/ReceivedItemsPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NavBarHeader","styled","Typography","NavBarLink","NavLink","LinksDiv","div","NavBar","AppBar","Toolbar","variant","to","exchangeRateToIlsState","atom","key","default","mockData","itemName","onlineStore","price","estimatedDelivery","Date","itemsListState","notReceivedItemsState","selector","get","filter","item","received","sort","a","b","getTime","storesListState","stores","reduce","storesObj","store","numOfItems","sumOfItemsPrices","storeName","Object","values","formatDate","date","dd","getDate","toString","padStart","mm","getMonth","yyyy","getFullYear","numberWithThousandsCommas","toFixed","replace","StyledItemCard","Card","StyledCardHeader","header","ItemCard","exchangeRateToILS","useRecoilValue","setItemsList","useSetRecoilState","gutterBottom","Button","size","color","startIcon","fontSize","onClick","e","prevItems","map","prevItem","Divider","component","StyledContainer","Paper","StyledListContainer","StyledTab","Tab","StyledList","ItemsList","itemsList","i","StoreCard","StoresList","storesList","StyledModal","FormInput","TextField","Form","form","InputWrapper","AddItemModal","open","handleClose","useFormik","initialValues","estDate","validationSchema","Yup","required","onSubmit","console","log","handleSubmit","handleChange","touched","handleBlur","errors","Modal","onClose","label","name","value","onChange","onBlur","placeholder","helperText","error","type","InputProps","startAdornment","InputAdornment","position","InputLabelProps","shrink","TAB_VALUE_ITEMS","TAB_VALUE_STORES","MyOrdersList","useState","openModal","setOpenModal","setValue","elevation","TabContext","style","display","flexDirection","TabList","centered","event","newValue","flexGrow","Tooltip","arrow","title","IconButton","TabPanel","MyOrdersPage","setExchangeRateToILS","useEffect","intervalId","setInterval","fetch","res","json","rates","clearInterval","ReceivedItemsPage","Main","main","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.900835d1.chunk.js","sourcesContent":["import { AppBar, Toolbar, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\ninterface NavBarProps {}\n\nconst NavBarHeader = styled(Typography)`\n\tmargin-right: auto;\n`;\n\nconst NavBarLink = styled(NavLink)`\n\tcolor: white;\n\ttext-decoration: none;\n\tflex-grow: 1;\n\tpadding-left: 12px;\n\t&:visited {\n\t\tcolor: white;\n\t}\n`;\n\nconst LinksDiv = styled.div`\n\tdisplay: flex;\n`;\n\nexport const NavBar: React.FC<NavBarProps> = ({}) => {\n\treturn (\n\t\t<AppBar>\n\t\t\t<Toolbar>\n\t\t\t\t<NavBarHeader variant=\"h6\">\n\t\t\t\t\t<NavBarLink to=\"/\">Ship4U</NavBarLink>\n\t\t\t\t</NavBarHeader>\n\t\t\t\t<LinksDiv>\n\t\t\t\t\t<NavBarLink to=\"/list\">\n\t\t\t\t\t\t<Typography variant=\"subtitle1\">{\"My Orders\"}</Typography>\n\t\t\t\t\t</NavBarLink>\n\t\t\t\t\t<NavBarLink to=\"/received\">\n\t\t\t\t\t\t<Typography variant=\"subtitle1\">{\"Recieved Items\"}</Typography>\n\t\t\t\t\t</NavBarLink>\n\t\t\t\t</LinksDiv>\n\t\t\t</Toolbar>\n\t\t</AppBar>\n\t);\n};\n","import { atom } from \"recoil\";\n\nexport const exchangeRateToIlsState = atom<number>({\n\tkey: \"exchangeRateToIlsState\",\n\tdefault: 3.5\n});\n","import { Item } from \"./models\";\n\nconst mockData: Item[] = [\n\t{\n\t\titemName: \"iPhone 12\",\n\t\tonlineStore: \"Apple Store\",\n\t\tprice: 799,\n\t\testimatedDelivery: new Date(\"1/12/2021\")\n\t},\n\t{\n\t\titemName: \"iPhone 12 Pro\",\n\t\tonlineStore: \"Apple Store\",\n\t\tprice: 999,\n\t\testimatedDelivery: new Date(\"1/12/2021\")\n\t},\n\t{\n\t\titemName: \"iPhone 12 Pro Max\",\n\t\tonlineStore: \"Apple Store\",\n\t\tprice: 1099,\n\t\testimatedDelivery: new Date(\"1/12/2021\")\n\t},\n\t{\n\t\titemName: \"iPhone 12 Mini\",\n\t\tonlineStore: \"Apple Store\",\n\t\tprice: 699,\n\t\testimatedDelivery: new Date(\"1/12/2021\")\n\t},\n\t{\n\t\titemName: \"Nest Mini\",\n\t\tonlineStore: \"Google Store\",\n\t\tprice: 49,\n\t\testimatedDelivery: new Date(\"12/11/2021\")\n\t},\n\t{\n\t\titemName: \"Nest Audio\",\n\t\tonlineStore: \"Google Store\",\n\t\tprice: 99,\n\t\testimatedDelivery: new Date(\"1/12/2021\")\n\t},\n\t{\n\t\titemName: \"Pixel 5\",\n\t\tonlineStore: \"Google Store\",\n\t\tprice: 699,\n\t\testimatedDelivery: new Date(\"1/12/2021\")\n\t},\n\t{\n\t\titemName: \"Chromecast\",\n\t\tonlineStore: \"Google Store\",\n\t\tprice: 49,\n\t\testimatedDelivery: new Date(\"1/12/2021\")\n\t},\n\t{\n\t\titemName: \"Kindle 10th Gen\",\n\t\tonlineStore: \"Amazon\",\n\t\tprice: 79,\n\t\testimatedDelivery: new Date(\"1/12/2021\")\n\t},\n\t{\n\t\titemName: \"Fire TV Stick\",\n\t\tonlineStore: \"Amazon\",\n\t\tprice: 39,\n\t\testimatedDelivery: new Date(\"12/11/2021\")\n\t},\n\t{\n\t\titemName: \"Echo Dot\",\n\t\tonlineStore: \"Amazon\",\n\t\tprice: 29,\n\t\testimatedDelivery: new Date(\"12/11/2021\")\n\t}\n];\n\nexport default mockData;\n","import { atom, selector } from \"recoil\";\nimport mockData from \"../exampleData\";\nimport { Item, Store } from \"../models\";\n\nexport const itemsListState = atom<Item[]>({\n\tkey: \"itemsListState\",\n\tdefault: mockData\n});\n\nexport const receivedItemsState = selector<Item[]>({\n\tkey: \"receivedItemsState\",\n\tget: ({ get }) => {\n\t\tconst items = get(itemsListState);\n\t\tconst received = items\n\t\t\t.filter(item => item.received)\n\t\t\t.sort(\n\t\t\t\t(a, b) => b.estimatedDelivery.getTime() - a.estimatedDelivery.getTime()\n\t\t\t);\n\t\treturn received;\n\t}\n});\n\nexport const notReceivedItemsState = selector<Item[]>({\n\tkey: \"notReceivedItemsState\",\n\tget: ({ get }) => {\n\t\tconst items = get(itemsListState);\n\t\tconst notReceived = items\n\t\t\t.filter(item => !item.received)\n\t\t\t.sort(\n\t\t\t\t(a, b) => a.estimatedDelivery.getTime() - b.estimatedDelivery.getTime()\n\t\t\t);\n\t\treturn notReceived;\n\t}\n});\n\ninterface ReduceObj {\n\t[key: string]: Store;\n}\n\nexport const storesListState = selector<Store[]>({\n\tkey: \"storesListState\",\n\tget: ({ get }) => {\n\t\tconst items = get(itemsListState);\n\t\tconst storesObj: ReduceObj = {};\n\t\tconst stores: ReduceObj = items.reduce((storesObj, item: Item) => {\n\t\t\tif (!storesObj[item.onlineStore]) {\n\t\t\t\tstoresObj[item.onlineStore] = {\n\t\t\t\t\tstoreName: item.onlineStore,\n\t\t\t\t\tnumOfItems: 1,\n\t\t\t\t\tsumOfItemsPrices: item.price\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tconst store: Store = storesObj[item.onlineStore];\n\t\t\t\tstoresObj[item.onlineStore] = {\n\t\t\t\t\t...store,\n\t\t\t\t\tnumOfItems: store.numOfItems + 1,\n\t\t\t\t\tsumOfItemsPrices: store.sumOfItemsPrices + item.price\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn storesObj;\n\t\t}, storesObj);\n\n\t\treturn Object.values(stores);\n\t}\n});\n","export function formatDate(date: Date): string {\n\tconst dd: string = date.getDate().toString().padStart(2, \"0\");\n\tconst mm: string = (date.getMonth() + 1).toString().padStart(2, \"0\");\n\tconst yyyy: string = date.getFullYear().toString();\n\treturn `${dd}/${mm}/${yyyy}`;\n}\n\nexport function numberWithThousandsCommas(price: number): string {\n\tconst fixedPrice: string = `${price.toFixed(2)}`;\n\treturn fixedPrice.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n","import { Card } from \"@material-ui/core\";\nimport styled from \"styled-components\";\n\nexport const StyledItemCard = styled(Card)`\n\tpadding: 16px;\n\tmargin-bottom: 12px;\n`;\n\nexport const StyledCardHeader = styled.header`\n\tdisplay: flex;\n\tjustify-content: space-between;\n`;\n","import React from \"react\";\nimport { Item } from \"../models\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { exchangeRateToIlsState } from \"../atoms/exchangeRate\";\nimport { itemsListState } from \"../atoms/Items\";\nimport { Button, Divider, Typography } from \"@material-ui/core\";\nimport { formatDate, numberWithThousandsCommas } from \"../helpers\";\nimport {\n\tStyledItemCard,\n\tStyledCardHeader\n} from \"./styled/StyledCardComponents\";\nimport CheckIcon from \"@material-ui/icons/Check\";\n\ninterface ItemCardProps {\n\titem: Item;\n}\n\nexport const ItemCard: React.FC<ItemCardProps> = ({ item }) => {\n\tconst exchangeRateToILS = useRecoilValue(exchangeRateToIlsState);\n\tconst setItemsList = useSetRecoilState(itemsListState);\n\n\tfunction handleReceived(e: React.MouseEvent) {\n\t\tsetItemsList(prevItems => {\n\t\t\tconst updatedItems = prevItems.map(prevItem => {\n\t\t\t\tif (item.itemName === prevItem.itemName) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...prevItem,\n\t\t\t\t\t\treceived: true\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn prevItem;\n\t\t\t});\n\t\t\treturn updatedItems;\n\t\t});\n\t}\n\n\treturn (\n\t\t<StyledItemCard>\n\t\t\t<StyledCardHeader>\n\t\t\t\t<Typography gutterBottom={false} variant=\"h6\">\n\t\t\t\t\t{item.itemName}\n\t\t\t\t</Typography>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"text\"\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tstartIcon={<CheckIcon fontSize=\"small\" />}\n\t\t\t\t\tonClick={handleReceived}>\n\t\t\t\t\tMark as received\n\t\t\t\t</Button>\n\t\t\t</StyledCardHeader>\n\t\t\t<Divider />\n\t\t\t<Typography variant=\"subtitle2\">{item.onlineStore}</Typography>\n\t\t\t<Typography variant=\"subtitle1\">\n\t\t\t\t{`Price: $${numberWithThousandsCommas(item.price)}`}\n\t\t\t\t<Typography\n\t\t\t\t\tvariant=\"subtitle2\"\n\t\t\t\t\tcomponent=\"span\">{` ( ₪${numberWithThousandsCommas(\n\t\t\t\t\titem.price * exchangeRateToILS\n\t\t\t\t)} )`}</Typography>\n\t\t\t</Typography>\n\t\t\t<Typography variant=\"subtitle1\">{`Delivery EST date: ${formatDate(\n\t\t\t\titem.estimatedDelivery\n\t\t\t)}`}</Typography>\n\t\t</StyledItemCard>\n\t);\n};\n","import { Paper, Tab } from \"@material-ui/core\";\nimport styled from \"styled-components\";\n\nexport const StyledContainer = styled(Paper)`\n\tmax-width: 600px;\n\twidth: 100%;\n\tmargin: 50px auto;\n`;\n\nexport const StyledListContainer = styled.div`\n\twidth: 100%;\n\toverflow-y: auto;\n\tbackground-color: #f5f5f5;\n\n\t&::-webkit-scrollbar {\n\t\twidth: 8px;\n\t}\n\t&::-webkit-scrollbar-track {\n\t\tbackground: transparent;\n\t}\n\t&::-webkit-scrollbar-thumb {\n\t\tbackground: #bbb;\n\t\tborder-radius: 4px;\n\t}\n`;\n\nexport const StyledTab = styled(Tab)`\n\tflex-grow: 1;\n`;\n\nexport const StyledList = styled.div`\n\tmax-height: 68vh;\n`;\n","import React from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { notReceivedItemsState } from \"../atoms/Items\";\nimport { ItemCard } from \"./ItemCard\";\nimport { StyledList } from \"./styled/StyledListComponents\";\n\ninterface ItemsListProps {}\n\nexport const ItemsList: React.FC<ItemsListProps> = ({}) => {\n\tconst itemsList = useRecoilValue(notReceivedItemsState);\n\treturn (\n\t\t<StyledList>\n\t\t\t{itemsList.map((item, i) => {\n\t\t\t\treturn <ItemCard key={i} item={item} />;\n\t\t\t})}\n\t\t</StyledList>\n\t);\n};\n","import { Divider, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Store } from \"../models\";\nimport { exchangeRateToIlsState } from \"../atoms/exchangeRate\";\nimport { useRecoilValue } from \"recoil\";\nimport {\n\tStyledItemCard,\n\tStyledCardHeader\n} from \"./styled/StyledCardComponents\";\nimport { numberWithThousandsCommas } from \"../helpers\";\nimport StorefrontIcon from \"@material-ui/icons/Storefront\";\n\ninterface StoreCardProps {\n\tstore: Store;\n}\n\nexport const StoreCard: React.FC<StoreCardProps> = ({ store }) => {\n\tconst exchangeRateToILS = useRecoilValue(exchangeRateToIlsState);\n\n\treturn (\n\t\t<StyledItemCard>\n\t\t\t<StyledCardHeader>\n\t\t\t\t<Typography gutterBottom={false} variant=\"h6\">\n\t\t\t\t\t{store.storeName}\n\t\t\t\t</Typography>\n\t\t\t\t<StorefrontIcon />\n\t\t\t</StyledCardHeader>\n\t\t\t<Divider />\n\t\t\t<Typography variant=\"subtitle1\">{`Number of products: ${store.numOfItems}`}</Typography>\n\t\t\t<Typography variant=\"subtitle1\">\n\t\t\t\t{`Total products price: $${numberWithThousandsCommas(\n\t\t\t\t\tstore.sumOfItemsPrices\n\t\t\t\t)}`}\n\t\t\t\t<Typography\n\t\t\t\t\tvariant=\"subtitle2\"\n\t\t\t\t\tcomponent=\"span\">{` ( ₪${numberWithThousandsCommas(\n\t\t\t\t\tstore.sumOfItemsPrices * exchangeRateToILS\n\t\t\t\t)} )`}</Typography>\n\t\t\t</Typography>\n\t\t</StyledItemCard>\n\t);\n};\n","import React from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { storesListState } from \"../atoms/Items\";\nimport { StoreCard } from \"./StoreCard\";\nimport { StyledList } from \"./styled/StyledListComponents\";\n\ninterface StoresListProps {}\n\nexport const StoresList: React.FC<StoresListProps> = ({}) => {\n\tconst storesList = useRecoilValue(storesListState);\n\n\treturn (\n\t\t<StyledList>\n\t\t\t{storesList.map((store, i) => {\n\t\t\t\treturn <StoreCard key={i} store={store} />;\n\t\t\t})}\n\t\t</StyledList>\n\t);\n};\n","import { Paper, TextField } from \"@material-ui/core\";\nimport styled from \"styled-components\";\n\nexport const StyledModal = styled(Paper)`\n\tposition: absolute;\n\tleft: 50%;\n\ttop: 50%;\n\ttransform: translate(-50%, -50%);\n\twidth: 350px;\n\toutline: none;\n\tpadding: 12px;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n`;\n\nexport const FormInput = styled(TextField)`\n\twidth: 100%;\n`;\nexport const Form = styled.form`\n\twidth: 70%;\n\tpadding: 12px;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: flex-end;\n`;\n\nexport const InputWrapper = styled.div`\n\theight: 60px;\n\twidth: 100%;\n\tmargin-bottom: 18px;\n`;\n","import { Button, InputAdornment, Modal, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Item } from \"../models\";\nimport { useSetRecoilState } from \"recoil\";\nimport { itemsListState } from \"../atoms/Items\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n\tForm,\n\tFormInput,\n\tInputWrapper,\n\tStyledModal\n} from \"./styled/StyledFormComponents\";\n\ninterface AddItemModalProps {\n\topen: boolean;\n\thandleClose: () => void;\n}\n\nexport const AddItemModal: React.FC<AddItemModalProps> = ({\n\topen,\n\thandleClose\n}) => {\n\tconst setItemsList = useSetRecoilState(itemsListState);\n\tconst {\n\t\tvalues,\n\t\thandleSubmit,\n\t\thandleChange,\n\t\ttouched,\n\t\thandleBlur,\n\t\terrors\n\t} = useFormik({\n\t\tinitialValues: {\n\t\t\titemName: \"\",\n\t\t\tonlineStore: \"\",\n\t\t\tprice: 0,\n\t\t\testDate: \"\"\n\t\t},\n\t\tvalidationSchema: Yup.object({\n\t\t\titemName: Yup.string().required(\"Item name is required\"),\n\t\t\tonlineStore: Yup.string().required(\"Store name is required\"),\n\t\t\tprice: Yup.number().required(\"Please enter item's price\"),\n\t\t\testDate: Yup.date().required(\"Please enter a estimated delivery date\")\n\t\t}),\n\t\tonSubmit: ({ itemName, onlineStore, price, estDate }) => {\n\t\t\tconsole.log(\"form submitted\");\n\t\t\tconsole.log(itemName, onlineStore, price, estDate);\n\t\t\tconst estimatedDelivery = estDate === \"\" ? new Date() : new Date(estDate);\n\t\t\taddItemToList({ itemName, onlineStore, price, estimatedDelivery });\n\t\t\thandleClose();\n\t\t}\n\t});\n\n\tfunction addItemToList(item: Item) {\n\t\tsetItemsList(prevItems => [...prevItems, item]);\n\t}\n\n\treturn (\n\t\t<Modal open={open} onClose={handleClose}>\n\t\t\t<StyledModal>\n\t\t\t\t<Typography variant=\"h5\">Add Item</Typography>\n\t\t\t\t<Form onSubmit={handleSubmit}>\n\t\t\t\t\t<InputWrapper>\n\t\t\t\t\t\t<FormInput\n\t\t\t\t\t\t\tlabel=\"Item name\"\n\t\t\t\t\t\t\tname=\"itemName\"\n\t\t\t\t\t\t\tvalue={values.itemName}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\tplaceholder=\"Samsung Galaxy Note 10\"\n\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\ttouched.itemName && errors.itemName ? errors.itemName : \" \"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\terror={touched.itemName && errors.itemName ? true : false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</InputWrapper>\n\t\t\t\t\t<InputWrapper>\n\t\t\t\t\t\t<FormInput\n\t\t\t\t\t\t\tlabel=\"Store name\"\n\t\t\t\t\t\t\tname=\"onlineStore\"\n\t\t\t\t\t\t\tvalue={values.onlineStore}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\tplaceholder=\"Samsung store\"\n\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\ttouched.onlineStore && errors.onlineStore\n\t\t\t\t\t\t\t\t\t? errors.onlineStore\n\t\t\t\t\t\t\t\t\t: \" \"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\terror={touched.onlineStore && errors.onlineStore ? true : false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</InputWrapper>\n\t\t\t\t\t<InputWrapper>\n\t\t\t\t\t\t<FormInput\n\t\t\t\t\t\t\tlabel=\"Price\"\n\t\t\t\t\t\t\tname=\"price\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\tplaceholder=\"49.90\"\n\t\t\t\t\t\t\thelperText={touched.price && errors.price ? errors.price : \" \"}\n\t\t\t\t\t\t\terror={touched.price && errors.price ? true : false}\n\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\tstartAdornment: (\n\t\t\t\t\t\t\t\t\t<InputAdornment position=\"start\">$</InputAdornment>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</InputWrapper>\n\t\t\t\t\t<InputWrapper>\n\t\t\t\t\t\t<FormInput\n\t\t\t\t\t\t\tlabel=\"Estimated delivery date\"\n\t\t\t\t\t\t\tname=\"estDate\"\n\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\tvalue={values.estDate}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\tplaceholder=\"dd/mm/yyyy\"\n\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\ttouched.estDate && errors.estDate ? errors.estDate : \" \"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\terror={touched.estDate && errors.estDate ? true : false}\n\t\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\t\tshrink: true\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</InputWrapper>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Button type=\"submit\" variant=\"contained\" color=\"primary\">\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</Form>\n\t\t\t</StyledModal>\n\t\t</Modal>\n\t);\n};\n","import React, { useState } from \"react\";\nimport { AppBar, IconButton, Tooltip } from \"@material-ui/core\";\nimport { TabContext, TabList, TabPanel } from \"@material-ui/lab\";\nimport { ItemsList } from \"./ItemsList\";\nimport { StoresList } from \"./StoresList\";\nimport {\n\tStyledContainer,\n\tStyledListContainer,\n\tStyledTab\n} from \"./styled/StyledListComponents\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { AddItemModal } from \"./AddItemModal\";\n\ninterface MyOrdersListProps {}\n\nconst TAB_VALUE_ITEMS = \"items\";\nconst TAB_VALUE_STORES = \"stores\";\n\nexport const MyOrdersList: React.FC<MyOrdersListProps> = () => {\n\tconst [openModal, setOpenModal] = useState(false);\n\tconst [value, setValue] = useState(\"items\");\n\tconst handleChange = (event: React.ChangeEvent<{}>, newValue: string) => {\n\t\tsetValue(newValue);\n\t};\n\tfunction handleModalClose() {\n\t\tsetOpenModal(false);\n\t}\n\tfunction handleModalOpen() {\n\t\tsetOpenModal(true);\n\t}\n\n\treturn (\n\t\t<StyledContainer elevation={3}>\n\t\t\t<TabContext value={value}>\n\t\t\t\t<AppBar\n\t\t\t\t\tposition=\"sticky\"\n\t\t\t\t\tstyle={{ display: \"flex\", flexDirection: \"row\" }}>\n\t\t\t\t\t<TabList centered onChange={handleChange} style={{ flexGrow: 5 }}>\n\t\t\t\t\t\t<StyledTab label=\"Items\" value={TAB_VALUE_ITEMS} />\n\t\t\t\t\t\t<StyledTab label=\"Stores\" value={TAB_VALUE_STORES} />\n\t\t\t\t\t</TabList>\n\t\t\t\t\t<Tooltip arrow title=\"Add Item\" style={{ flexGrow: 1 }}>\n\t\t\t\t\t\t<IconButton color=\"inherit\" onClick={handleModalOpen}>\n\t\t\t\t\t\t\t<AddIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</AppBar>\n\t\t\t\t<StyledListContainer>\n\t\t\t\t\t<TabPanel value={TAB_VALUE_ITEMS}>\n\t\t\t\t\t\t<ItemsList />\n\t\t\t\t\t</TabPanel>\n\t\t\t\t\t<TabPanel value={TAB_VALUE_STORES}>\n\t\t\t\t\t\t<StoresList />\n\t\t\t\t\t</TabPanel>\n\t\t\t\t</StyledListContainer>\n\t\t\t</TabContext>\n\t\t\t<AddItemModal open={openModal} handleClose={handleModalClose} />\n\t\t</StyledContainer>\n\t);\n};\n","import React, { useEffect } from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport { exchangeRateToIlsState } from \"../atoms/exchangeRate\";\nimport { MyOrdersList } from \"../components/MyOrdersList\";\ninterface MyOrdersPageProps {}\n\nconst GET_EXCHANGE_RATE_INTERVAL = 10000;\n\nexport const MyOrdersPage: React.FC<MyOrdersPageProps> = ({}) => {\n\tconst setExchangeRateToILS = useSetRecoilState<number>(\n\t\texchangeRateToIlsState\n\t);\n\n\tuseEffect(() => {\n\t\tconst intervalId = setInterval(async () => {\n\t\t\tconst res = await fetch(\n\t\t\t\t\"https://api.exchangeratesapi.io/latest?base=USD\"\n\t\t\t);\n\t\t\tconst { rates } = await res.json();\n\t\t\tif (rates[\"ILS\"]) {\n\t\t\t\tsetExchangeRateToILS(rates[\"ILS\"]);\n\t\t\t}\n\t\t}, GET_EXCHANGE_RATE_INTERVAL);\n\t\treturn () => clearInterval(intervalId);\n\t}, []);\n\n\treturn <MyOrdersList />;\n};\n","import React from \"react\";\n\ninterface ReceivedItemsPageProps {}\n\nexport const ReceivedItemsPage: React.FC<ReceivedItemsPageProps> = ({}) => {\n\treturn <div>received</div>;\n};\n","import React from \"react\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { NavBar } from \"./components/NavBar\";\nimport { MyOrdersPage } from \"./pages/MyOrdersPage\";\nimport { ReceivedItemsPage } from \"./pages/ReceivedItemsPage\";\n\nconst Main = styled.main`\n\tpadding-top: 64px;\n`;\n\nfunction App() {\n\treturn (\n\t\t<HashRouter>\n\t\t\t<NavBar />\n\t\t\t<Main>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" component={() => <div>homepage</div>} />\n\t\t\t\t\t<Route exact path=\"/list\" component={MyOrdersPage} />\n\t\t\t\t\t<Route exact path=\"/received\" component={ReceivedItemsPage} />\n\t\t\t\t</Switch>\n\t\t\t</Main>\n\t\t</HashRouter>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { RecoilRoot } from \"recoil\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<RecoilRoot>\n\t\t\t<App />\n\t\t</RecoilRoot>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}